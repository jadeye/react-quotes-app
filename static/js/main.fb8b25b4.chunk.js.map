{"version":3,"sources":["components/quotes/QuoteForm.module.css","components/layout/MainNavigation.module.css","components/comments/NewCommentForm.module.css","components/quotes/QuoteList.module.css","components/quotes/QuoteItem.module.css","components/quotes/NoQuotesFound.module.css","components/UI/LoadingSpinner.module.css","components/UI/Card.module.css","components/comments/Comments.module.css","components/comments/CommentItem.module.css","components/comments/CommentsList.module.css","components/quotes/HighlightedQuote.module.css","components/layout/Layout.module.css","components/quotes/QuoteItem.js","components/quotes/QuoteList.js","components/quotes/NoQuotesFound.js","components/UI/LoadingSpinner.js","hooks/use-http.js","lib/api.js","pages/AllQuotes.js","components/UI/Card.js","components/quotes/QuoteForm.js","pages/NewQuote.js","components/comments/NewCommentForm.js","components/comments/CommentItem.js","components/comments/CommentsList.js","components/comments/Comments.js","components/quotes/HighlightedQuote.js","pages/QuoteDetail.js","components/layout/MainNavigation.js","components/layout/Layout.js","pages/NotFound.js","App.js","index.js"],"names":["module","exports","QuoteItem","props","className","classes","item","text","author","to","id","QuoteList","history","useHistory","location","useLocation","queryParams","URLSearchParams","search","forEach","value","key","console","log","quotes","ascending","isSortingAscending","get","sortedQuotes","sort","quoteA","quoteB","sorting","onClick","push","pathname","list","map","quote","NoQuotesFound","noquotes","LoadingSpinner","spinner","httpReducer","state","action","type","data","error","status","responseData","errorMessage","useHttp","requestFunction","startWithPending","useReducer","httpState","dispatch","sendRequest","useCallback","requestData","message","FIREBASE_DOMAIN","process","getAllQuotes","fetch","response","json","ok","Error","transformedQuotes","quoteObj","getSingleQuote","quoteId","loadedQuote","addQuote","quoteData","method","body","JSON","stringify","headers","addComment","commentData","commentId","name","getAllComments","transformedComments","commentObj","AllQuotes","loadedQuotes","useEffect","length","Card","card","children","QuoteForm","useState","isEntering","setIsEntering","authorInputRef","useRef","textInputRef","when","onFocus","form","onSubmit","event","preventDefault","enteredAuthor","current","enteredText","onAddQuote","isLoading","loading","control","htmlFor","ref","rows","actions","NewQuote","NewCommentForm","commentTextRef","onAddedComment","submitFormHandler","CommentItem","CommentsList","comments","comment","Comments","isAddingComment","setIsAddingComment","params","useParams","loadedComments","addedCommentHandler","HighlightedQuote","QuoteDetail","match","useRouteMatch","path","exact","url","MainNavigation","header","logo","nav","activeClassName","active","Layout","main","NotFound","App","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.fb8b25b4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"QuoteForm_form__3Ndw9\",\"loading\":\"QuoteForm_loading__iDpS0\",\"control\":\"QuoteForm_control__2lCiE\",\"actions\":\"QuoteForm_actions__354La\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"MainNavigation_header__pcWBd\",\"logo\":\"MainNavigation_logo__3mTft\",\"nav\":\"MainNavigation_nav__2KJfX\",\"active\":\"MainNavigation_active__oN3Ka\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"NewCommentForm_form__2Te8b\",\"loading\":\"NewCommentForm_loading__2veC2\",\"control\":\"NewCommentForm_control__3NVeP\",\"actions\":\"NewCommentForm_actions__2fwWP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"QuoteList_list__3pzcl\",\"sorting\":\"QuoteList_sorting__rL6H1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"QuoteItem_item__2dOvb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"noquotes\":\"NoQuotesFound_noquotes__3DIYb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"LoadingSpinner_spinner__2Kyqv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__1m44e\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"Comments_comments__iZX-v\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"CommentItem_item__24mbD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"comments\":\"CommentsList_comments__valp0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"quote\":\"HighlightedQuote_quote__nE9T6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"Layout_main__auk_r\"};","import { Link } from \"react-router-dom\";\nimport classes from \"./QuoteItem.module.css\";\n\nconst QuoteItem = (props) => {\n  //  <Route path=\"/quotes/:quoteId/comments\">\n  return (\n    <li className={classes.item}>\n      <figure>\n        <blockquote>\n          <p>{props.text}</p>\n        </blockquote>\n        <figcaption>{props.author}</figcaption>\n      </figure>\n      <Link to={`/quotes/${props.id}`} className=\"btn\">\n        View Fullscreen\n      </Link>\n    </li>\n  );\n};\n\nexport default QuoteItem;\n","import { Fragment } from \"react\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport QuoteItem from \"./QuoteItem\";\nimport classes from \"./QuoteList.module.css\";\n\nconst sortQuotes = (quotes, ascending) => {\n  return quotes.sort((quoteA, quoteB) => {\n    if (ascending) {\n      return quoteA.id > quoteB.id ? 1 : -1;\n    } else {\n      return quoteA.id < quoteB.id ? 1 : -1;\n    }\n  });\n};\n\nconst QuoteList = (props) => {\n  const history = useHistory();\n  const location = useLocation();\n  const queryParams = new URLSearchParams(location.search);\n  /* for (const [key, value] of queryParams.entries()) {\n    console.log(`key: ${key} Value: ${value}`);\n  } */\n  queryParams.forEach((value, key) => {\n    console.log(value, key);\n  });\n  const isSortingAscending = queryParams.get(\"sort\") === \"asc\";\n  const sortedQuotes = sortQuotes(props.quotes, isSortingAscending);\n\n  const changeSortingHandler = () => {\n    console.log(queryParams[\"sort\"]);\n    // console.log(location.search);\n    history.push({\n      location: location.pathname,\n      search: `?sort=${isSortingAscending ? \"desc\" : \"asc\"}`,\n    });\n    /* THESE ARE IDENTICAL\n    history.push(\n      `${location.pathname}?sort=${isSortingAscending ? \"desc\" : \"asc\"}`\n    );\n    */\n  };\n  return (\n    <Fragment>\n      <div className={classes.sorting}>\n        <button onClick={changeSortingHandler}>\n          Sort {isSortingAscending ? \"Descending\" : \"Ascending\"}\n        </button>\n      </div>\n      <ul className={classes.list}>\n        {sortedQuotes.map((quote) => (\n          <QuoteItem\n            key={quote.id}\n            id={quote.id}\n            author={quote.author}\n            text={quote.text}\n          />\n        ))}\n      </ul>\n    </Fragment>\n  );\n};\n\nexport default QuoteList;\n","import { Link } from \"react-router-dom\";\nimport classes from \"./NoQuotesFound.module.css\";\n\nconst NoQuotesFound = () => {\n  return (\n    <div className={classes.noquotes}>\n      <p>No quotes found!</p>\n      <Link className=\"btn\" to=\"/new-quote\">\n        Add a Quote\n      </Link>\n    </div>\n  );\n};\n\nexport default NoQuotesFound;\n","import classes from './LoadingSpinner.module.css';\n\nconst LoadingSpinner = () => {\n  return <div className={classes.spinner}></div>;\n}\n\nexport default LoadingSpinner;\n","import { useReducer, useCallback } from 'react';\n\nfunction httpReducer(state, action) {\n  if (action.type === 'SEND') {\n    return {\n      data: null,\n      error: null,\n      status: 'pending',\n    };\n  }\n\n  if (action.type === 'SUCCESS') {\n    return {\n      data: action.responseData,\n      error: null,\n      status: 'completed',\n    };\n  }\n\n  if (action.type === 'ERROR') {\n    return {\n      data: null,\n      error: action.errorMessage,\n      status: 'completed',\n    };\n  }\n\n  return state;\n}\n\nfunction useHttp(requestFunction, startWithPending = false) {\n  const [httpState, dispatch] = useReducer(httpReducer, {\n    status: startWithPending ? 'pending' : null,\n    data: null,\n    error: null,\n  });\n\n  const sendRequest = useCallback(\n    async function (requestData) {\n      dispatch({ type: 'SEND' });\n      try {\n        const responseData = await requestFunction(requestData);\n        dispatch({ type: 'SUCCESS', responseData });\n      } catch (error) {\n        dispatch({\n          type: 'ERROR',\n          errorMessage: error.message || 'Something went wrong!',\n        });\n      }\n    },\n    [requestFunction]\n  );\n\n  return {\n    sendRequest,\n    ...httpState,\n  };\n}\n\nexport default useHttp;\n","const FB_URL = process.env.REACT_APP_FB_URL;\nconst FIREBASE_DOMAIN = FB_URL;\n\nexport async function getAllQuotes() {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quotes.\");\n  }\n\n  const transformedQuotes = [];\n\n  for (const key in data) {\n    const quoteObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedQuotes.push(quoteObj);\n  }\n\n  return transformedQuotes;\n}\n\nexport async function getSingleQuote(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes/${quoteId}.json`);\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not fetch quote.\");\n  }\n\n  const loadedQuote = {\n    id: quoteId,\n    ...data,\n  };\n\n  return loadedQuote;\n}\n\nexport async function addQuote(quoteData) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/quotes.json`, {\n    method: \"POST\",\n    body: JSON.stringify(quoteData),\n    headers: {\n      \"Content-Type\": \"application/json\",\n    },\n  });\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not create quote.\");\n  }\n\n  return null;\n}\n\nexport async function addComment(requestData) {\n  const response = await fetch(\n    `${FIREBASE_DOMAIN}/comments/${requestData.quoteId}.json`,\n    {\n      method: \"POST\",\n      body: JSON.stringify(requestData.commentData),\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    }\n  );\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not add comment.\");\n  }\n\n  return { commentId: data.name };\n}\n\nexport async function getAllComments(quoteId) {\n  const response = await fetch(`${FIREBASE_DOMAIN}/comments/${quoteId}.json`);\n\n  const data = await response.json();\n\n  if (!response.ok) {\n    throw new Error(data.message || \"Could not get comments.\");\n  }\n\n  const transformedComments = [];\n\n  for (const key in data) {\n    const commentObj = {\n      id: key,\n      ...data[key],\n    };\n\n    transformedComments.push(commentObj);\n  }\n\n  return transformedComments;\n}\n","import React, { useEffect } from \"react\";\nimport QuoteList from \"../components/quotes/QuoteList\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport { getAllQuotes } from \"../lib/api\";\n\nconst AllQuotes = () => {\n  const {\n    sendRequest,\n    status,\n    error,\n    data: loadedQuotes,\n  } = useHttp(getAllQuotes, true);\n\n  useEffect(() => {\n    sendRequest();\n  }, [sendRequest]);\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <div className=\"centered\">{error}</div>;\n  }\n\n  if (status === \"completed\" && (!loadedQuotes || loadedQuotes.length === 0)) {\n    return (\n      <div className=\"centered\">\n        <NoQuotesFound />\n      </div>\n    );\n  }\n  return <QuoteList quotes={loadedQuotes} />;\n};\n\nexport default AllQuotes;\n","import classes from './Card.module.css';\n\nconst Card = (props) => {\n  return <div className={classes.card}>{props.children}</div>;\n};\n\nexport default Card;\n","import { Fragment, useRef, useState } from \"react\";\nimport { Prompt } from \"react-router-dom\";\n\nimport Card from \"../UI/Card\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\nimport classes from \"./QuoteForm.module.css\";\n\nconst QuoteForm = (props) => {\n  const [isEntering, setIsEntering] = useState(false);\n  const authorInputRef = useRef();\n  const textInputRef = useRef();\n  const finishedEnteringHandler = () => {\n    setIsEntering(false);\n  };\n\n  function submitFormHandler(event) {\n    event.preventDefault();\n\n    const enteredAuthor = authorInputRef.current.value;\n    const enteredText = textInputRef.current.value;\n\n    // optional: Could validate here\n\n    props.onAddQuote({ author: enteredAuthor, text: enteredText });\n  }\n\n  const onFocusedFormHandler = () => {\n    setIsEntering(true);\n  };\n  return (\n    <Fragment>\n      <Prompt\n        when={isEntering}\n        message={(location) =>\n          \"All changes will be lost. \\nAre you sure you want to leave?\"\n        }\n      />\n      <Card>\n        <form\n          onFocus={onFocusedFormHandler}\n          className={classes.form}\n          onSubmit={submitFormHandler}\n        >\n          {props.isLoading && (\n            <div className={classes.loading}>\n              <LoadingSpinner />\n            </div>\n          )}\n\n          <div className={classes.control}>\n            <label htmlFor=\"author\">Author</label>\n            <input type=\"text\" id=\"author\" ref={authorInputRef} />\n          </div>\n          <div className={classes.control}>\n            <label htmlFor=\"text\">Text</label>\n            <textarea id=\"text\" rows=\"5\" ref={textInputRef}></textarea>\n          </div>\n          <div className={classes.actions}>\n            <button onClick={finishedEnteringHandler} className=\"btn\">\n              Add Quote\n            </button>\n          </div>\n        </form>\n      </Card>\n    </Fragment>\n  );\n};\n\nexport default QuoteForm;\n","import { useHistory } from \"react-router-dom\";\nimport React, { useEffect } from \"react\";\nimport QuoteForm from \"../components/quotes/QuoteForm\";\nimport useHttp from \"../hooks/use-http\";\nimport { addQuote } from \"../lib/api\";\n\nconst NewQuote = () => {\n  const { sendRequest, status } = useHttp(addQuote);\n  const history = useHistory();\n\n  useEffect(() => {\n    if (status === \"completed\") {\n      history.push(\"/quotes\");\n    }\n  }, [status, history]);\n  const addQuoteHandler = (quoteData) => {\n    sendRequest(quoteData);\n    //console.log(quoteData);\n    // history.push(\"/quotes\");\n  };\n  return (\n    <QuoteForm isLoading={status === \"pending\"} onAddQuote={addQuoteHandler} />\n  );\n};\n\nexport default NewQuote;\n","import { useEffect, useRef } from \"react\";\nimport useHttp from \"../../hooks/use-http\";\nimport { addComment } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./NewCommentForm.module.css\";\n\nconst NewCommentForm = (props) => {\n  const commentTextRef = useRef();\n  const { sendRequest, status, error } = useHttp(addComment);\n\n  const { onAddedComment } = props;\n\n  useEffect(() => {\n    if (status === \"completed\" && !error) {\n      onAddedComment();\n    }\n  }, [status, error, onAddedComment]);\n  const submitFormHandler = (event) => {\n    event.preventDefault();\n    const enteredText = commentTextRef.current.value;\n    sendRequest({ commentData: { text: enteredText }, quoteId: props.quoteId });\n    // optional: Could validate here\n\n    // send comment to server\n  };\n\n  return (\n    <form className={classes.form} onSubmit={submitFormHandler}>\n      {status === \"pending\" && (\n        <div className=\"centered\">\n          <LoadingSpinner />\n        </div>\n      )}\n      <div className={classes.control} onSubmit={submitFormHandler}>\n        <label htmlFor=\"comment\">Your Comment</label>\n        <textarea id=\"comment\" rows=\"5\" ref={commentTextRef}></textarea>\n      </div>\n      <div className={classes.actions}>\n        <button className=\"btn\">Add Comment</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewCommentForm;\n","import classes from './CommentItem.module.css';\n\nconst CommentItem = (props) => {\n  return (\n    <li className={classes.item}>\n      <p>{props.text}</p>\n    </li>\n  );\n};\n\nexport default CommentItem;\n","import CommentItem from './CommentItem';\nimport classes from './CommentsList.module.css';\n\nconst CommentsList = (props) => {\n  return (\n    <ul className={classes.comments}>\n      {props.comments.map((comment) => (\n        <CommentItem key={comment.id} text={comment.text} />\n      ))}\n    </ul>\n  );\n};\n\nexport default CommentsList;\n","import { useCallback, useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport useHttp from \"../../hooks/use-http\";\nimport { getAllComments } from \"../../lib/api\";\nimport LoadingSpinner from \"../UI/LoadingSpinner\";\n\nimport classes from \"./Comments.module.css\";\nimport NewCommentForm from \"./NewCommentForm\";\nimport CommentsList from \"./CommentsList\";\n\nconst Comments = () => {\n  const [isAddingComment, setIsAddingComment] = useState(false);\n  const params = useParams();\n  const { quoteId } = params;\n  const { sendRequest, status, data: loadedComments } = useHttp(getAllComments);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  const startAddCommentHandler = () => {\n    setIsAddingComment(true);\n  };\n\n  const addedCommentHandler = useCallback(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n\n  let comments;\n\n  if (status === \"pending\") {\n    comments = (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (status === \"completed\" && loadedComments && loadedComments.length > 0) {\n    comments = <CommentsList comments={loadedComments} />;\n  }\n  if (\n    status === \"completed\" &&\n    !loadedComments &&\n    loadedComments.length === 0\n  ) {\n    comments = <div className=\"centered\">No Comments added yet!</div>;\n  }\n  return (\n    <section className={classes.comments}>\n      <h2>User Comments</h2>\n      {!isAddingComment && (\n        <button className=\"btn\" onClick={startAddCommentHandler}>\n          Add a Comment\n        </button>\n      )}\n      {isAddingComment && (\n        <NewCommentForm\n          quoteId={params.quoteId}\n          onAddedComment={addedCommentHandler}\n        />\n      )}\n      {comments}\n    </section>\n  );\n};\n\nexport default Comments;\n","import classes from './HighlightedQuote.module.css';\n\nconst HighlightedQuote = (props) => {\n  return (\n    <figure className={classes.quote}>\n      <p>{props.text}</p>\n      <figcaption>{props.author}</figcaption>\n    </figure>\n  );\n};\n\nexport default HighlightedQuote;\n","import React, { Fragment, useEffect } from \"react\";\nimport { Link, Route, useParams, useRouteMatch } from \"react-router-dom\";\nimport Comments from \"../components/comments/Comments\";\nimport HighLightedQuote from \"../components/quotes/HighlightedQuote\";\nimport NoQuotesFound from \"../components/quotes/NoQuotesFound\";\nimport LoadingSpinner from \"../components/UI/LoadingSpinner\";\nimport useHttp from \"../hooks/use-http\";\nimport { getSingleQuote } from \"../lib/api\";\n\nconst QuoteDetail = () => {\n  const match = useRouteMatch();\n\n  const params = useParams();\n  const { quoteId } = params;\n  const {\n    sendRequest,\n    status,\n    error,\n    data: loadedQuote,\n  } = useHttp(getSingleQuote, true);\n\n  useEffect(() => {\n    sendRequest(quoteId);\n  }, [sendRequest, quoteId]);\n  /*\n     The path could also be:\n     path={`/quotes/${params.quoteId}/comments`}\n     path=\"/quotes/:quoteId/comments\"Comments\n     OR\n     match.path = /quotes/:quoteId\n     match.url = /quotes/${params.quoteId}\n    */\n\n  if (status === \"pending\") {\n    return (\n      <div className=\"centered\">\n        <LoadingSpinner />\n      </div>\n    );\n  }\n\n  if (error) {\n    return <div className=\"centered\">{error}</div>;\n  }\n\n  if (!loadedQuote.text) {\n    return (\n      <div className=\"centered\">\n        <NoQuotesFound />\n      </div>\n    );\n  }\n\n  return (\n    <Fragment>\n      <HighLightedQuote text={loadedQuote.text} author={loadedQuote.author} />\n      <Route path={match.path} exact>\n        <div className=\"centered\">\n          <Link className=\"btn--flat\" to={`${match.url}/comments`}>\n            Load Comments\n          </Link>\n        </div>\n      </Route>\n      <Route path={`${match.path}/comments`}>\n        <Comments />\n      </Route>\n    </Fragment>\n  );\n};\n\nexport default QuoteDetail;\n","import { NavLink } from \"react-router-dom\";\nimport React from \"react\";\nimport classes from \"./MainNavigation.module.css\";\n\nconst MainNavigation = () => {\n  return (\n    <header className={classes.header}>\n      <div className={classes.logo}>Great Quotes</div>\n      <nav className={classes.nav}>\n        <ul>\n          <li>\n            <NavLink to=\"/quotes\" activeClassName={classes.active}>\n              All Quotes\n            </NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/new-quote\" activeClassName={classes.active}>\n              Add a Quote\n            </NavLink>\n          </li>\n        </ul>\n      </nav>\n    </header>\n  );\n};\n\nexport default MainNavigation;\n","import React, { Fragment } from \"react\";\nimport classes from \"./Layout.module.css\";\nimport MainNavigation from \"./MainNavigation\";\n\nconst Layout = (props) => {\n  return (\n    <Fragment>\n      <MainNavigation />\n      <main className={classes.main}>{props.children}</main>\n    </Fragment>\n  );\n};\n\nexport default Layout;\n","import React from \"react\";\n\nconst NotFound = () => {\n  return (\n    <div className=\"centered\">\n      <p>\n        <h1>404 - Page Not Found!</h1>\n      </p>\n    </div>\n  );\n};\n\nexport default NotFound;\n","import { Redirect, Route, Switch } from \"react-router-dom\";\nimport AllQuotes from \"./pages/AllQuotes\";\nimport NewQuote from \"./pages/NewQuote\";\nimport QuoteDetail from \"./pages/QuoteDetail\";\nimport Layout from \"./components/layout/Layout\";\nimport NotFound from \"./pages/NotFound\";\nfunction App() {\n  return (\n    <Layout>\n      <Switch>\n        <Route path=\"/\" exact>\n          <Redirect to=\"/quotes\" />\n        </Route>\n        <Route path=\"/quotes\" exact>\n          <AllQuotes />\n        </Route>\n        <Route path=\"/quotes/:quoteId\">\n          <QuoteDetail />\n        </Route>\n        <Route path=\"/new-quote\">\n          <NewQuote />\n        </Route>\n        <Route path=\"*\">\n          <NotFound />\n        </Route>\n      </Switch>\n    </Layout>\n  );\n}\n\nexport default App;\n","import ReactDOM from \"react-dom/client\";\n\nimport \"./index.css\";\nimport App from \"./App\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\nroot.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>\n);\n"],"sourceRoot":""}